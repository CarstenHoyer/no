/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ../public/Dundee_1st_20231024_low.glb --types --transform 
Files: ../public/Dundee_1st_20231024_low.glb [4.79MB] > Dundee_1st_20231024_low-transformed.glb [497.41KB] (90%)
Author: 
Originating system: Rhino 7.33
Organization: 
Comments: 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/Dundee_1st_20231024_low-transformed.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.mesh_0.geometry}
        material={materials.PaletteMaterial001}
      />
    </group>
  );
}

useGLTF.preload("/Dundee_1st_20231024_low-transformed.glb");
